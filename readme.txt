ABSTRACT

This project explores the implementation of the K-Means clustering algorithm from scratch using Python, focusing on applying Z-score normalization to standardize data. The dataset, containing two features, is preprocessed to ensure that all values have a mean of zero and a standard deviation of one, optimizing the clustering process. The algorithm follows an iterative approach: random centroid initialization, point assignment based on Euclidean distance, and centroid updates until convergence. To evaluate the effectiveness of the method, the clustering process is performed for k = 2 and k = 3, with results visualized through scatter plots. Unlike traditional implementations that rely on machine learning libraries, this approach strictly adheres to a manual implementation using NumPy and Matplotlib, ensuring a clear understanding of K-Means mechanics. The findings demonstrate how proper feature scaling significantly impacts cluster formation, making this an essential preprocessing step for unsupervised learning tasks.